{{- if .Values.postgres.enabled }}
{{- $secretName := .Values.secretName | default (printf "%s-pg-conn" (include "whodidthechores.fullname" .)) }}
{{- $pvcName:= .Values.postgres.pvcName | default (printf "%s-pgdata" (include "whodidthechores.fullname" .)) }}
{{- $host := (printf "%s-pg" (include "whodidthechores.fullname" .)) }}
apiVersion: v1
kind: Service
metadata:
  name: {{ $host }}
  {{- if .Values.commonAnnotations }}
  annotations:
    {{- if .Values.commonAnnotations }}
    {{- toYaml .Values.commonAnnotations | nindent 4 }}
    {{- end }}
  {{- end }}
  labels: {{- include "whodidthechores.postgresLabels" . | nindent 4 }}
    {{- if .Values.commonLabels }}
    {{- toYaml .Values.commonLabels | nindent 4 }}
    {{- end }}
spec:
  type: ClusterIP
  ports:
  - port: 5432
    name: pg
  clusterIP: None
  selector: {{- include "whodidthechores.postgresMatchLabels" . | nindent 4 }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ $host }}
spec:
  selector:
    matchLabels: {{- include "whodidthechores.postgresMatchLabels" . | nindent 6 }}
  serviceName: {{ $host }}
  replicas: 1
  template:
    metadata:
      labels: {{- include "whodidthechores.postgresMatchLabels" . | nindent 8 }}
    spec:
      {{- if .Values.postgres.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.postgres.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      containers:
      - name: postgres
        image: postgres:15.10-bookworm
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: {{ $secretName | quote }}
              key: "username"
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ $secretName | quote }}
              key: "password"
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: {{ $secretName | quote }}
              key: "database"
        ports:
        - containerPort: 5432
          name: pg
        volumeMounts:
        - name: {{ $pvcName | quote }}
          mountPath: /var/lib/postgresql/data
{{- if .Values.postgres.createPvc }}
  volumeClaimTemplates:
  - metadata:
      name: {{ $pvcName | quote }}
    spec:
      accessModes: [ "ReadWriteOnce" ]
      {{- if .Values.postgres.storageClassName }}
      storageClassName: {{ .Values.postgres.storageClassName | quote }}
      {{- end }}
      resources:
        requests:
          storage: {{ .Values.postgres.storageRequest }}
{{- else }}
  volume:
  - name: {{ $pvcName | quote }}
    persistentVolumeClaim:
      claimName: {{ $pvcName | quote }}
{{- end }}
---
{{- $port := "5432" }}
{{- $database := "whodidthechores" }}
{{- $username := "postgres" }}
{{- $existingSecret := lookup "v1" "Secret" .Release.Namespace $secretName }}
{{- $password := randAlphaNum 20 }}
{{- if $existingSecret }}
{{- $password := $existingSecret.data.password | b64dec }}
{{- end }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ $secretName }}
data:
  host: {{ $host | b64enc | quote }}
  port: {{ $port | b64enc | quote }}
  database: {{ $database | b64enc | quote }}
  username: {{ $username | b64enc | quote }}
  password: {{ $password | b64enc | quote }}
{{- end }}