package html

import (
	"fmt"
	"github.com/mqufflc/whodidthechores/internal/repository"
	"github.com/mqufflc/whodidthechores/internal/repository/postgres"
)

templ usersTemplate(users []postgres.User) {
	<div id="usersList">
		<table class="table table-sm table-zebra lg:table-lg">
			<thead>
				<tr>
					<th>Name</th>
				</tr>
			</thead>
			<tbody>
				for _, user := range users {
					<tr id={ fmt.Sprintf("user-%d", user.ID) }>
						<td>{ user.Name }</td>
						<td><a class="btn btn-outline btn-secondary btn-xs" href={ templ.URL(fmt.Sprintf("/users/%d", user.ID)) }>Edit</a></td>
					</tr>
				}
			</tbody>
		</table>
	</div>
}

templ Users(users []postgres.User) {
	@layout("Users") {
		@usersTemplate(users)
		<div class="flex m-4">
			<a class="ml-auto btn btn-primary btn-sm lg:btn-md" href="/users/new">Add a User</a>
		</div>
	}
}

templ UserCreate(userParams repository.UserParams) {
	@layout("Create a new User") {
		<div class="mx-auto w-80 sm:w-96">
			<form action="/users/new" method="post">
				@userFieldSet(userParams)
				<div class="flex m-4">
					<a class="btn btn-sm lg:btn-md" href="/users">Back</a>
					<button class="ml-auto btn btn-primary btn-sm lg:btn-md">Save</button>
				</div>
			</form>
		</div>
	}
}

templ UserEdit(userParams repository.UserParams) {
	@layout("Edit a User") {
		<div class="mx-auto w-80 sm:w-96">
			<form action={ templ.URL(fmt.Sprintf("/users/%d", userParams.ID)) } method="PUT">
				@userFieldSet(userParams)
				<div class="flex m-4">
					<a class="btn btn-sm lg:btn-md" href="/users">Back</a>
					<div class="ml-auto flex justify-between gap-4">
						<button class="ml-auto btn btn-warning btn-sm lg:btn-md" hx-delete={ fmt.Sprintf("/users/%d", userParams.ID) } hx-confirm="Are you sure you want to delete this user?">Delete</button>
						<button class="ml-auto btn btn-primary btn-sm lg:btn-md">Save</button>
					</div>
				</div>
			</form>
		</div>
	}
}

templ userFieldSet(userParams repository.UserParams) {
	<fieldset>
		<legend class="text-lg">User Values</legend>
		<div class="p-2 flex flex-col gap-2">
			<div class="form-control w-full">
				<label class="label label-text" for="name">Name</label>
				<input class="input input-bordered w-full placeholder-neutral-content/50" name="name" id="name" type="text" value={ userParams.Name } required/>
				<span class="label label-text-alt text-error">{ userParams.Errors.Name }</span>
			</div>
		</div>
	</fieldset>
}
