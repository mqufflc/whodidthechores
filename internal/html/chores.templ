package html

import (
	"fmt"
	"github.com/mqufflc/whodidthechores/internal/repository"
	"github.com/mqufflc/whodidthechores/internal/repository/postgres"
	"strconv"
	"time"
)

templ choresTemplate(chores []postgres.Chore) {
	<div id="choresList" class="max-h-[38rem] overflow-auto">
		<table class="table table-pin-rows table-sm table-zebra lg:table-lg">
			<thead>
				<tr>
					<th>Name</th>
					<th>Description</th>
					<th class="hidden md:inline-block">Default Duration</th>
					<th></th>
				</tr>
			</thead>
			<tbody>
				for _, chore := range chores {
					<tr id={ fmt.Sprintf("chore-%d", chore.ID) }>
						<td>{ chore.Name }</td>
						<td>{ chore.Description }</td>
						<td class="hidden md:inline-block">{ strconv.FormatInt(int64(chore.DefaultDurationMn), 10) } mn</td>
						<td><a class="btn btn-outline btn-accent btn-xs" href={ templ.URL(fmt.Sprintf("/chores/%d", chore.ID)) }>View</a></td>
					</tr>
				}
			</tbody>
		</table>
	</div>
}

templ tasksChoreTemplate(tasksRows []postgres.GetChoreTasksRow, timezone *time.Location) {
	<div id="tasksList" class="max-h-[38rem] overflow-auto">
		<table class="table table-pin-rows table-sm table-zebra lg:table-lg">
			<thead>
				<tr>
					<th>User</th>
					<th class="hidden md:inline-block">Duration</th>
					<th class="hidden md:inline-block">Description</th>
					<th>Started At</th>
					<th></th>
				</tr>
			</thead>
			<tbody>
				for _, taskRow := range tasksRows {
					<tr id={ fmt.Sprintf("task-%v", taskRow.Task.ID.String()) }>
						<td>{ taskRow.User.Name }</td>
						<td class="hidden md:inline-block">{ strconv.FormatInt(int64(taskRow.Task.DurationMn), 10) } mn</td>
						<td class="hidden md:inline-block">{ taskRow.Task.Description }</td>
						<td>{ taskRow.Task.StartedAt.In(timezone).Format("02/01/2006 15:04") }</td>
						<td><a class="btn btn-outline btn-accent btn-xs" href={ templ.URL(fmt.Sprintf("/tasks/%v", taskRow.Task.ID.String())) }>Edit</a></td>
					</tr>
				}
			</tbody>
		</table>
	</div>
}

templ Chores(chores []postgres.Chore) {
	@layout("Chores") {
		@choresTemplate(chores)
		<div class="flex m-4">
			<a class="ml-auto btn btn-primary btn-sm lg:btn-md" href="/chores/new">Add a Chore</a>
		</div>
	}
}

templ ChoreCreate(choreParams repository.ChoreParams) {
	@layout("Create a new Chore") {
		<div class="mx-auto w-80 sm:w-96">
			<form action="/chores/new" method="post">
				@choreFieldSet(choreParams, true)
				<div class="flex m-4">
					<a class="btn btn-sm lg:btn-md" href="/chores">Back</a>
					<button class="ml-auto btn btn-primary btn-sm lg:btn-md">Save</button>
				</div>
			</form>
		</div>
	}
}

templ ChoreView(choreParams repository.ChoreParams, taskRows []postgres.GetChoreTasksRow, timezone *time.Location) {
	@layout("View a Chore") {
		<div class="mx-auto w-80 sm:w-96">
			@choreFieldSet(choreParams, false)
			<div class="flex m-4">
				<a class="btn btn-sm lg:btn-md" href="/chores">Back</a>
				<a class="ml-auto btn btn-primary btn-sm lg:btn-md" href={ templ.URL(fmt.Sprintf("/chores/%d/edit", choreParams.ID)) }>Edit</a>
			</div>
		</div>
		@tasksChoreTemplate(taskRows, timezone)
	}
}

templ ChoreEdit(choreParams repository.ChoreParams) {
	@layout("Edit a Chore") {
		<div class="mx-auto w-80 sm:w-96">
			<form action={ templ.URL(fmt.Sprintf("/chores/%d/edit", choreParams.ID)) } method="PUT">
				@choreFieldSet(choreParams, true)
				<div class="flex m-4">
					<a class="btn btn-sm lg:btn-md" href={ templ.URL(fmt.Sprintf("/chores/%d", choreParams.ID)) }>Back</a>
					<div class="ml-auto flex justify-between gap-4">
						<button class="ml-auto btn btn-warning btn-sm lg:btn-md" hx-delete={ fmt.Sprintf("/chores/%d/edit", choreParams.ID) } hx-confirm="Are you sure you want to delete this chore?">Delete</button>
						<button class="ml-auto btn btn-primary btn-sm lg:btn-md">Save</button>
					</div>
				</div>
			</form>
		</div>
	}
}

templ choreFieldSet(choreParams repository.ChoreParams, editable bool) {
	<fieldset class="fieldset" if !editable {
	disabled
}>
		<legend class="fieldset-legend">Chore Values</legend>
		<label class="fieldset-label" for="name">Name</label>
		<input class="input w-full" name="name" id="name" type="text" placeholder="Dishes" value={ choreParams.Name } required/>
		<span class="label text-error">{ choreParams.Errors.Name }</span>
		<label class="fieldset-label" for="description">Description</label>
		<input class="input w-full" name="description" id="description" type="text" placeholder="Washing the dishes" value={ choreParams.Description }/>
		<span class="label text-error">{ choreParams.Errors.Description }</span>
		<label class="fieldset-label" for="default_duration">Default Duration (mn)</label>
		<input class="input w-full" name="default_duration" id="default_duration" type="number" placeholder="15" min="0" value={ choreParams.DefaultDurationMn } required/>
		<span class="label text-error">{ choreParams.Errors.DefaultDurationMn }</span>
	</fieldset>
}
